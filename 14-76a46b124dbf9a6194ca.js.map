{"version":3,"sources":["webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./node_modules/@firebase/storage/dist/index.esm.js"],"names":["__webpack_require__","r","__webpack_exports__","d","__extends","_assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__spreadArrays","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","_extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","assign","t","s","i","n","arguments","length","call","apply","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","decorators","target","key","desc","c","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","m","exports","o","ar","error","concat","il","k","a","j","jl","asyncIterator","q","resume","fulfill","settle","shift","cooked","raw","mod","__esModule","default","$export","S","isInteger","isObject","floor","Math","module","it","isFinite","registerStorage","_firebase_app__WEBPACK_IMPORTED_MODULE_25__","_firebase_app__WEBPACK_IMPORTED_MODULE_25___default","tslib__WEBPACK_IMPORTED_MODULE_26__","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","MIN_SAFE_INTEGER","FirebaseStorageError","code","message","code_","prependCode","message_","serverResponse_","name_","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","get","enumerable","configurable","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","canceled","cannotSliceBlob","invalidArgument","index","fnName","appDeleted","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","parts","DataURLParts","base64","rest","decoded","decodeURIComponent","percentEncodedBytes_","dataUrl","dataURLContentType_","charCodeAt","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","isDef","isJustDef","isFunction","isNonNullObject","isString","String","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","addEventListener","ABORT","NETWORK_ERROR","send","url","method","headers","open","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","slice","startByte","endByte","realBlob","sliced","start","blob","webkitSlice","mozSlice","buffer","getBlob","args","_i","blobby","map","val","undefined","bb","append","Error","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","gsRegex","RegExp","hostRegex","groups","regex","indices","postModify","loc","charAt","group","captures","exec","bucketValue","pathValue","invalidUrl","jsonObjectOrNull","obj","JSON","parse","isArray","lastComponent","lastIndexOf","makeUrl","urlPart","makeQueryString","params","queryPart","noXform_","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","fromResource","authWrapper","resource","len","mapping","makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","metadataValidator","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","listOptionsValidator","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","fromResponseString","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","metadataForUpload_","metadataClone","determineContentType_","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","X-Goog-Upload-Command","X-Goog-Upload-Offset","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","complete","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","validate","name","specs","passed","minArgs","maxArgs","optional","argMin","argMax","real","countPart","plural","validator","ArgSpec","self","stringSpec","stringValidator","chainedValidator","v1","v2","uploadDataSpec","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","async","argsToForward","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","metadataForUpload","X-Goog-Upload-Protocol","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","Content-Type","createResumableUpload","createRequest","makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","boundary","str","random","genBoundary","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","makeBinder","addObserver_","removeObserver_","binderSpecs","onFulfilled","onRejected","notifyObserver_","splice","finishPromise_","triggered","bind","snapshot","valid","pause","Reference","newRef","child","childPath","newPath","canonicalChildPath","filter","component","join","parent","service","put","throwIfRoot_","putString","_xhr","_text","deleteObject","listAll","accumulator","listAllHelper","pageToken","opt","nextPage","list","options","delimiter","maxResults","isRoot","updateMetadata","getDownloadURL","getDownloadUrl","invalidRootOperation","FailRequest","_appDelete","RequestMap","Map","id","addRequest","request","clear","AuthWrapper","app","maker","requestMaker","pool","bucket_","deleted_","app_","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","INTERNAL","getToken","response","accessToken","deleteApp","setMaxUploadRetryTime","time","setMaxOperationRetryTime","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","backoffDone","requestWentThrough","wasSuccessCode","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","waitMillis","stopped","stop","wasTimeout","clearTimeout","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","version","SDK_VERSION","addVersionHeader_","Service","authWrapperBucket","internals_","ServiceInternals","test","refFromURL","STORAGE_TYPE","factory","unused","instance","namespaceExports","Storage","registerService"],"mappings":"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","file":"14-76a46b124dbf9a6194ca.js","sourcesContent":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.set-prototype-of\";\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nexport { _assign as __assign };\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport function __exportStar(m, exports) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\nexport function __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n}\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\n;\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n}","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.last-index-of\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.object.define-property\";\nimport firebase from '@firebase/app';\nimport { __awaiter, __generator } from 'tslib';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 100;\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\n\nvar MIN_SAFE_INTEGER = -9007199254740991;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function get() {\n      return this.name_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function get() {\n      return this.code_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function get() {\n      return this.message_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function get() {\n      return this.serverResponse_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n\n    default: // do nothing\n\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n\n    default: // do nothing\n\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function get() {\n      return this.path.length === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var path = '(/([^?#]*).*)?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\n    var httpIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: httpRegex,\n      indices: httpIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, authWrapper) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(authWrapper, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(authWrapper, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  var bucket = authWrapper.bucket();\n\n  if (bucket === null) {\n    throw noDefaultBucket();\n  }\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(authWrapper, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(authWrapper, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(authWrapper) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(authWrapper, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(authWrapper, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // tslint:disable-next-line:no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // tslint:disable-next-line:no-floating-promises\n\n\n    this.authWrapper_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n\n        default:\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      default: // Ignore\n\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype[\"catch\"] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(authWrapper, location) {\n    this.authWrapper = authWrapper;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (authWrapper, location) {\n    return new Reference(authWrapper, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function get() {\n      return this.location.bucket;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function get() {\n      return this.location.path;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function get() {\n      return lastComponent(this.location.path);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function get() {\n      return this.authWrapper.service();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype[\"delete\"] = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.authWrapper, _this.location);\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.authWrapper, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map = new Map();\n    this.id = MIN_SAFE_INTEGER;\n  }\n  /**\r\n   * Registers the given request with this map.\r\n   * The request is unregistered when it completes.\r\n   *\r\n   * @param request The request to register.\r\n   */\n\n\n  RequestMap.prototype.addRequest = function (request) {\n    var _this = this;\n\n    var id = this.id;\n    this.id++;\n    this.map.set(id, request);\n    request.getPromise().then(function () {\n      return _this.map[\"delete\"](id);\n    }, function () {\n      return _this.map[\"delete\"](id);\n    });\n  };\n  /**\r\n   * Cancels all registered requests.\r\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    this.map.forEach(function (v) {\n      v && v.cancel(true);\n    });\n    this.map.clear();\n  };\n\n  return RequestMap;\n}();\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\n\n\nvar AuthWrapper =\n/** @class */\nfunction () {\n  function AuthWrapper(app, maker, requestMaker, service, pool) {\n    this.bucket_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n\n    if (this.app_ !== null) {\n      var options = this.app_.options;\n\n      if (isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n      }\n    }\n\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requestMap_ = new RequestMap();\n  }\n\n  AuthWrapper.extractBucket_ = function (config) {\n    var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    var loc = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  };\n\n  AuthWrapper.prototype.getAuthToken = function () {\n    // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n    // (b/28673818).\n    if (this.app_ !== null && isDef(this.app_.INTERNAL) && isDef(this.app_.INTERNAL.getToken)) {\n      return this.app_.INTERNAL.getToken().then(function (response) {\n        if (response !== null) {\n          return response.accessToken;\n        } else {\n          return null;\n        }\n      }, function () {\n        return null;\n      });\n    } else {\n      return Promise.resolve(null);\n    }\n  };\n\n  AuthWrapper.prototype.bucket = function () {\n    if (this.deleted_) {\n      throw appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  };\n  /**\r\n   * The service associated with this auth wrapper. Untyped to avoid circular\r\n   * type dependencies.\r\n   */\n\n\n  AuthWrapper.prototype.service = function () {\n    return this.service_;\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return Actually a firebaseStorage.Reference, typing not allowed\r\n   *     because of circular dependency problems.\r\n   */\n\n\n  AuthWrapper.prototype.makeStorageReference = function (loc) {\n    return this.storageRefMaker_(this, loc);\n  };\n\n  AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n    if (!this.deleted_) {\n      var request = this.requestMaker_(requestInfo, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  AuthWrapper.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  };\n\n  AuthWrapper.prototype.maxUploadRetryTime = function () {\n    return this.maxUploadRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n    this.maxUploadRetryTime_ = time;\n  };\n\n  AuthWrapper.prototype.maxOperationRetryTime = function () {\n    return this.maxOperationRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n    this.maxOperationRetryTime_ = time;\n  };\n\n  return AuthWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, callback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, [null, success].concat(args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, [null, success].concat(args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // tslint:disable-next-line:no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  function Service(app, pool, url) {\n    this.bucket_ = null;\n\n    function maker(authWrapper, loc) {\n      return new Reference(authWrapper, loc);\n    }\n\n    this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\n    this.app_ = app;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this.authWrapper_, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function get() {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function get() {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n   */\n\n\n  ServiceInternals.prototype[\"delete\"] = function () {\n    this.service_.authWrapper_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(app, unused, url) {\n  return new Service(app, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, // Allow multiple storage instances per app.\n  true);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };"],"sourceRoot":""}